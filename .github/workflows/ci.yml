# A pipeline to 
# 1. build the project
# 2. deploy the build to our VM

name: CI
env:
  LOGFILE: /home/flatly/drop_zone/www/backend/logs/flatly.log
  BACKEND_DIR: /home/flatly/drop_zone/www/backend/

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main, develop ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # build the Flatly project
  build:
    runs-on: ubuntu-latest
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      - name: Build the flatly backend with Maven
        run: | 
          echo "Building the flatly backend"
          mvn install -DskipTests
          
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v2
        with:
          name: backend
          path: '${{ github.workspace }}/target'
  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v2
        with:
          name: backend
        
      - name: Stop flatly.service
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_KEY }}
          envs: LOGFILE
          port: 22
          script: |
            sudo echo "[CI] Stopping service flatly"
            sudo echo "[CI] Stopping service flatly" >> $LOGFILE
            sudo systemctl stop flatly
            sudo echo "[CI] Stopped service flatly"
            sudo echo "[CI] Stopped service flatly" >> $LOGFILE
            
      - name: create backup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_KEY }}
          envs: LOGFILE,BACKEND_DIR
          port: 22
          script: |
            sudo echo "[CI] create backup"
            sudo echo "[CI] create backup" >> $LOGFILE
            sudo find $BACKEND_DIR -name "target" -exec mv {} flatly.backup \;
            
      - name: copy target files
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_KEY }}
          port: 22
          source: "*"
          target: "${{ env.BACKEND_DIR }}"
      
      - name: Restore backup
        if: ${{ failure() }}
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_KEY }}
          envs: LOGFILE,BACKEND_DIR
          port: 22
          script: |
            sudo echo "[CI] restore backup"
            sudo echo "[CI] restore backup" >> $LOGFILE
            sudo find $BACKEND_DIR -name "target" -exec rm -r {} \;
            sudo cp -r $BACKEND_DIR/flatly.backup $BACKEND_DIR/target
      - name: cleanup
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.HOST_KEY }}
          envs: LOGFILE,BACKEND_DIR
          port: 22
          script: |
            sudo echo "[CI] remove backup"
            sudo echo "[CI] remove backup" >> $LOGLFILE
            sudo rm $BACKEND_DIR/flatly.backup
            sudo echo "[CI] Starting service flatly"
            sudo echo "[CI] Starting service flatly" >> $LOGFILE
            sudo systemctl start flatly
